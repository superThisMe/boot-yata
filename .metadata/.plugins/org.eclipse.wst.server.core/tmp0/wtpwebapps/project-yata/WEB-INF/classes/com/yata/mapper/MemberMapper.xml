<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
		   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- package-name : com.springboard.mapper, class-name : BoardMapper -->
<mapper namespace="com.yata.mapper.MemberMapper">

	<!-- 회원가입 -->
	<insert id="insertMember" parameterType="MemberVO" useGeneratedKeys="true" keyColumn="user_num" keyProperty="user_num">
		INSERT INTO tbl_user (user_num, user_photo, user_email, user_passwd, user_Name, user_birth, user_phone, user_postcode, user_addr, user_detailAddr, user_refAddr, user_driveNum, user_key) 
		VALUES (usernum_sequence.nextval, #{user_photo}, #{user_email}, #{user_passwd}, #{user_Name}, #{user_birth}, #{user_phone}, #{user_postcode}, #{user_addr}, #{user_detailAddr}, #{user_refAddr}, #{user_driveNum}, #{ user_key })	
	</insert>
	
	<!-- 회원가입 시 기본포인트(1,000,000점) 부여 -->
	<insert id="insertPoint" parameterType="MemberVO">
		INSERT INTO tbl_point (user_num, active_point, total_point)
		VALUES (#{user_num}, 1000000, 1000000)
	</insert>
	
	<!-- 회원 포인트 부여 후 등급 업데이트 -->
	<update id="updatePoint" parameterType="MemberVO">
		update tbl_point
		set total_point = #{point.total_point}, active_point = #{point.active_point}, user_grade = #{point.user_grade}
		where user_num = #{ user_num }
	</update>
	
	<update id="updateActivePoint" parameterType="hashMap">
		update tbl_point
		set active_point = #{param2}
		where user_num = #{ param1 }
	</update>
	
	<update id="approval_member" parameterType="MemberVO">
		update tbl_user
		set user_active = '1'
		where user_email = #{ user_email } 
		and user_key = #{ user_key }
	</update>
	
	
	<resultMap type="MemberVO" id="MemberMap">
		<id column="user_num" property="user_num" />
		<result column="user_email" property="user_email" />
		<result column="user_photo" property="user_photo" />	
		<result column="user_Name" property="user_Name" />
		<result column="user_passwd" property="user_passwd" />
		<result column="user_postcode" property="user_postcode" />
		<result column="user_addr" property="user_addr" />
		<result column="user_detailAddr" property="user_detailAddr" />
		<result column="user_refAddr" property="user_refAddr" />
		<result column="user_birth" property="user_birth" />
		<result column="user_phone" property="user_phone" />
		<result column="user_regDate" property="user_regDate" />
		<result column="user_driveNum" property="user_driveNum" />
		<result column="user_key" property="user_key" />
		<result column="user_driveNum" property="user_driveNum" />		
		<result column="deleted" property="deleted" />		
		<result column="user_active" property="user_active" />
		<result column="user_type" property="user_type" />	
		<association property="point" column="user_num" resultMap="pointMap" />
	</resultMap>
	<resultMap type="PointVO" id="pointMap" >
		<id column="user_num" property="user_num" />
		<result column="user_grade" property="user_grade" />
		<result column="point_date" property="point_date" />
		<result column="total_point" property="total_point" />
		<result column="active_point" property="active_point" />
	</resultMap>
			
	<select id="findMember" resultMap="MemberMap" parameterType="MemberVO">
		SELECT p.user_num, m.user_email, m.user_Name, m.user_birth, m.user_phone, m.user_regDate ,m.user_driveNum, m.user_type, p.total_point, p.active_point, p.point_date , p.user_grade
		FROM tbl_user m INNER JOIN tbl_point p
		ON m.user_num = p.user_num 
		WHERE m.user_active = '1'
	</select>
	
	<select id="selectMemberByEmailAndPasswd" parameterType="MemberVO" resultMap="MemberMap" resultType="MemberVO">
		SELECT p.user_num, m.user_photo, m.user_email, m.user_passwd, m.user_Name, m.user_birth, m.user_phone, m.user_postcode, m.user_addr, m.user_detailAddr, m.user_refAddr, m.user_driveNum, m.user_type, m.user_active, m.user_regDate, p.total_point, p.active_point, p.point_date , p.user_grade
		FROM tbl_user m
		INNER JOIN tbl_point p
		ON m.user_num = p.user_num 
	    WHERE m.user_email = #{ user_email } AND m.user_passwd = #{ user_passwd }
	</select> 
	
	<update id="deleteUser" parameterType="MemberVO">
		update tbl_user
		set deleted = '1'
		where user_passwd = #{ user_passwd }
	</update>

	<select id="findEmail" parameterType="MemberVO" resultType="MemberVO">
		SELECT user_email, user_phone
		FROM tbl_user
		WHERE user_email = #{ user_email }
	</select>
	
	<select id="findPhone" parameterType="MemberVO" resultType="MemberVO">
		SELECT user_email, user_phone
		FROM tbl_user
		WHERE user_phone = #{ user_phone }
	</select>
	
	<update id="updatePasswd" parameterType="MemberVO">
		UPDATE tbl_user
		SET user_passwd = #{ user_passwd }
		WHERE user_email = #{ user_email } AND user_phone = #{ user_phone }
	</update>
		
	<select id="selectAllMember" resultType="int">
		SELECT COUNT(*)
		FROM tbl_user
	</select>
		
</mapper>